#SQL INSERT INTO SELECT Statement

->The INSERT INTO SELECT statement copies data from one table and inserts it into another table.

->INSERT INTO SELECT requires that data types in source and target tables match.
  The existing records in the target table are unaffected.


#INSERT INTO SELECT Syntax
->Copy all columns from one table to another table:

INSERT INTO table2
SELECT * FROM table1
WHERE condition;


->Copy only some columns from one table into another table:

INSERT INTO table2 (column1, column2, column3, ...)
SELECT column1, column2, column3, ...
FROM table1
WHERE condition;

#SQL INSERT INTO SELECT Examples

->The following SQL statement copies "Suppliers" into "Customers" (the columns that are not filled with data, will contain NULL):

Example:
INSERT INTO Customers (CustomerName, City, Country)
SELECT SupplierName, City, Country FROM Suppliers;


->The following SQL statement copies "Suppliers" into "Customers" (fill all columns):

Example:
INSERT INTO Customers (CustomerName, ContactName, Address, City, PostalCode, Country)
SELECT SupplierName, ContactName, Address, City, PostalCode, Country FROM Suppliers;


->The following SQL statement copies only the German suppliers into "Customers":

Example
INSERT INTO Customers (CustomerName, City, Country)
SELECT SupplierName, City, Country FROM Suppliers
WHERE Country='Germany';



		#INSERT INTO SELECT vs SELECT INTO:
Both the statements could be used to copy data from one table to another. 
But INSERT INTO SELECT could be used only if the target table exists 
whereas SELECT INTO statement could be used even if the target table 
doesn’t exist as it creates the target table if it doesn’t exist.

